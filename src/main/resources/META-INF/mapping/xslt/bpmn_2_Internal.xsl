<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2010

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:core="http://www.altova.com/MapForce/UDF/core" xmlns:ns0="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="core xs fn">
	<xsl:template name="core:convert-uri-to-windows-file-path">
		<xsl:param name="uri" select="()"/>
		<xsl:choose>
			<xsl:when test="fn:starts-with($uri, 'file://')">
				<xsl:choose>
					<xsl:when test="(fn:substring($uri, xs:double('6'), xs:double('3')) = '///')">
						<xsl:variable name="var2_result_urldecode" as="xs:string">
							<xsl:call-template name="core:url-decode">
								<xsl:with-param name="uri" select="fn:substring($uri, xs:double('9'), fn:string-length($uri))" as="xs:string"/>
							</xsl:call-template>
						</xsl:variable>
						<xsl:sequence select="fn:translate($var2_result_urldecode, '/|', '\:')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:sequence select="$uri"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:sequence select="$uri"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="core:url-decode">
		<xsl:param name="uri" select="()"/>
		<xsl:choose>
			<xsl:when test="fn:contains($uri, '%')">
				<xsl:variable name="var2_result_urldecodepart" as="xs:string">
					<xsl:call-template name="core:url-decode-part">
						<xsl:with-param name="uripart" select="fn:substring-after($uri, '%')" as="xs:string"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:sequence select="fn:concat(fn:substring-before($uri, '%'), $var2_result_urldecodepart)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:sequence select="$uri"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="core:url-decode-part">
		<xsl:param name="uripart" select="()"/>
		<xsl:variable name="var2_result_decfrom2digitshex" as="xs:decimal">
			<xsl:call-template name="core:dec-from-2digits-hex">
				<xsl:with-param name="hex" select="$uripart" as="xs:string"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="($var2_result_decfrom2digitshex &lt; xs:decimal('128'))">
				<xsl:call-template name="core:url-decode-utf8">
					<xsl:with-param name="value" select="$var2_result_decfrom2digitshex" as="xs:decimal"/>
					<xsl:with-param name="bytes" select="xs:decimal('0')" as="xs:decimal"/>
					<xsl:with-param name="rest" select="fn:substring($uripart, xs:double('3'), xs:double(fn:string-length($uripart)))" as="xs:string"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:choose>
					<xsl:when test="($var2_result_decfrom2digitshex &lt; xs:decimal('194'))">
						<xsl:call-template name="core:url-decode">
							<xsl:with-param name="uri" select="fn:substring($uripart, xs:double('3'), xs:double(fn:string-length($uripart)))" as="xs:string"/>
						</xsl:call-template>
					</xsl:when>
					<xsl:otherwise>
						<xsl:choose>
							<xsl:when test="($var2_result_decfrom2digitshex &lt; xs:decimal('224'))">
								<xsl:call-template name="core:url-decode-utf8">
									<xsl:with-param name="value" select="$var2_result_decfrom2digitshex" as="xs:decimal"/>
									<xsl:with-param name="bytes" select="xs:decimal('1')" as="xs:decimal"/>
									<xsl:with-param name="rest" select="fn:substring($uripart, xs:double('3'), xs:double(fn:string-length($uripart)))" as="xs:string"/>
								</xsl:call-template>
							</xsl:when>
							<xsl:otherwise>
								<xsl:choose>
									<xsl:when test="($var2_result_decfrom2digitshex &lt; xs:decimal('240'))">
										<xsl:call-template name="core:url-decode-utf8">
											<xsl:with-param name="value" select="$var2_result_decfrom2digitshex" as="xs:decimal"/>
											<xsl:with-param name="bytes" select="xs:decimal('2')" as="xs:decimal"/>
											<xsl:with-param name="rest" select="fn:substring($uripart, xs:double('3'), xs:double(fn:string-length($uripart)))" as="xs:string"/>
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:choose>
											<xsl:when test="($var2_result_decfrom2digitshex &lt; xs:decimal('245'))">
												<xsl:call-template name="core:url-decode-utf8">
													<xsl:with-param name="value" select="$var2_result_decfrom2digitshex" as="xs:decimal"/>
													<xsl:with-param name="bytes" select="xs:decimal('3')" as="xs:decimal"/>
													<xsl:with-param name="rest" select="fn:substring($uripart, xs:double('3'), xs:double(fn:string-length($uripart)))" as="xs:string"/>
												</xsl:call-template>
											</xsl:when>
											<xsl:otherwise>
												<xsl:sequence select="''"/>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="core:dec-from-2digits-hex">
		<xsl:param name="hex" select="()"/>
		<xsl:variable name="var2_result_decfrom1digithex" as="xs:decimal">
			<xsl:call-template name="core:dec-from-1digit-hex">
				<xsl:with-param name="hex" select="fn:substring($hex, xs:double('2'), xs:double('1'))" as="xs:string"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:variable name="var3_result_decfrom1digithex" as="xs:decimal">
			<xsl:call-template name="core:dec-from-1digit-hex">
				<xsl:with-param name="hex" select="fn:substring($hex, xs:double('1'), xs:double('1'))" as="xs:string"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:sequence select="(($var3_result_decfrom1digithex * xs:decimal('16')) + $var2_result_decfrom1digithex)"/>
	</xsl:template>
	<xsl:template name="core:url-decode-utf8">
		<xsl:param name="value" select="()"/>
		<xsl:param name="bytes" select="()"/>
		<xsl:param name="rest" select="()"/>
		<xsl:choose>
			<xsl:when test="($bytes = xs:integer('0'))">
				<xsl:variable name="var2_result_urldecode" as="xs:string">
					<xsl:call-template name="core:url-decode">
						<xsl:with-param name="uri" select="$rest" as="xs:string"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:sequence select="fn:concat(fn:codepoints-to-string(xs:integer($value)), $var2_result_urldecode)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:choose>
					<xsl:when test="(fn:substring($rest, xs:double('1'), xs:double('1')) = '%')">
						<xsl:variable name="var3_result_decfrom2digitshex" as="xs:decimal">
							<xsl:call-template name="core:dec-from-2digits-hex">
								<xsl:with-param name="hex" select="fn:substring($rest, xs:double('2'), xs:double(fn:string-length($rest)))" as="xs:string"/>
							</xsl:call-template>
						</xsl:variable>
						<xsl:call-template name="core:url-decode-utf8">
							<xsl:with-param name="value" select="((($value mod xs:decimal('64')) * xs:decimal('64')) + ($var3_result_decfrom2digitshex mod xs:decimal('64')))" as="xs:decimal"/>
							<xsl:with-param name="bytes" select="($bytes - xs:decimal('1'))" as="xs:decimal"/>
							<xsl:with-param name="rest" select="fn:substring($rest, xs:double('4'), xs:double(fn:string-length($rest)))" as="xs:string"/>
						</xsl:call-template>
					</xsl:when>
					<xsl:otherwise>
						<xsl:call-template name="core:url-decode">
							<xsl:with-param name="uri" select="$rest" as="xs:string"/>
						</xsl:call-template>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="core:dec-from-1digit-hex">
		<xsl:param name="hex" select="()"/>
		<xsl:choose>
			<xsl:when test="(fn:string-length(fn:substring-before('0123456789ABCDEFabcdef', $hex)) &lt;= xs:integer('15'))">
				<xsl:sequence select="xs:decimal(fn:string-length(fn:substring-before('0123456789ABCDEFabcdef', $hex)))"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:sequence select="(xs:decimal(fn:string-length(fn:substring-before('0123456789ABCDEFabcdef', $hex))) - xs:decimal('6'))"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_instance_BPMN20withoutDiagramms" as="node()" select="."/>
		<xsl:variable name="var2_create_definitions" as="node()">
			<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL">
				<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">
					<xsl:sequence select="'http://www.omg.org/spec/BPMN/20100524/MODEL C:/DOKUME~1/chris/Desktop/Dropbox/Masterarbeit/Code/Schema/internalBpmnSchema_007_RootElementDefenition.xsd'"/>
				</xsl:attribute>
				<xsl:for-each select="$var1_instance_BPMN20withoutDiagramms/ns0:definitions">
					<xsl:variable name="var3_definitions" as="node()" select="."/>
					<xsl:if test="$var3_definitions/@id">
						<xsl:attribute name="id" namespace="">
							<xsl:sequence select="xs:string($var3_definitions/@id)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var3_definitions/@name">
						<xsl:attribute name="name" namespace="">
							<xsl:sequence select="xs:string($var3_definitions/@name)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:for-each select="$var3_definitions/ns0:messageEventDefinition">
						<xsl:variable name="var5_messageEventDefinition" as="node()" select="."/>
						<messageEventDefinition>
							<xsl:if test="$var5_messageEventDefinition/@id">
								<xsl:attribute name="id" namespace="">
									<xsl:sequence select="xs:string($var5_messageEventDefinition/@id)"/>
								</xsl:attribute>
							</xsl:if>
							<xsl:for-each select="$var5_messageEventDefinition/ns0:extensionElements">
								<extensionElements/>
							</xsl:for-each>
							<xsl:for-each select="$var5_messageEventDefinition/ns0:operationRef">
								<xsl:variable name="var9_operationRef" as="node()" select="."/>
								<operationRef>
									<xsl:sequence select="xs:QName($var9_operationRef)"/>
								</operationRef>
							</xsl:for-each>
						</messageEventDefinition>
					</xsl:for-each>
					<xsl:for-each select="$var3_definitions/ns0:process">
						<xsl:variable name="var11_process" as="node()" select="."/>
						<process>
							<xsl:if test="$var11_process/@id">
								<xsl:attribute name="id" namespace="">
									<xsl:sequence select="xs:string($var11_process/@id)"/>
								</xsl:attribute>
							</xsl:if>
							<xsl:if test="$var11_process/@name">
								<xsl:attribute name="name" namespace="">
									<xsl:sequence select="xs:string($var11_process/@name)"/>
								</xsl:attribute>
							</xsl:if>
							<xsl:for-each select="$var11_process/ns0:extensionElements">
								<extensionElements/>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:complexGateway">
								<xsl:variable name="var15_complexGateway" as="node()" select="."/>
								<complexGateway>
									<xsl:if test="$var15_complexGateway/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var15_complexGateway/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var15_complexGateway/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var15_complexGateway/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var15_complexGateway/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var15_complexGateway/ns0:incoming">
										<xsl:variable name="var19_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var19_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var15_complexGateway/ns0:outgoing">
										<xsl:variable name="var21_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var21_outgoing)"/>
										</outgoing>
									</xsl:for-each>
									<xsl:for-each select="$var15_complexGateway/ns0:activationCondition">
										<xsl:variable name="var23_activationCondition" as="node()" select="."/>
										<activationCondition>
											<xsl:sequence select="xs:string($var23_activationCondition)"/>
										</activationCondition>
									</xsl:for-each>
								</complexGateway>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:endEvent">
								<xsl:variable name="var25_endEvent" as="node()" select="."/>
								<endEvent>
									<xsl:if test="$var25_endEvent/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var25_endEvent/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var25_endEvent/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var25_endEvent/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var25_endEvent/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var25_endEvent/ns0:incoming">
										<xsl:variable name="var29_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var29_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var25_endEvent/ns0:outgoing">
										<xsl:variable name="var31_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var31_outgoing)"/>
										</outgoing>
									</xsl:for-each>
									<xsl:for-each select="$var25_endEvent/ns0:messageEventDefinition">
										<xsl:variable name="var33_messageEventDefinition" as="node()" select="."/>
										<messageEventDefinition>
											<xsl:if test="$var33_messageEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var33_messageEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var33_messageEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var33_messageEventDefinition/ns0:operationRef">
												<xsl:variable name="var37_operationRef" as="node()" select="."/>
												<operationRef>
													<xsl:sequence select="xs:QName($var37_operationRef)"/>
												</operationRef>
											</xsl:for-each>
										</messageEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var25_endEvent/ns0:terminateEventDefinition">
										<xsl:variable name="var39_terminateEventDefinition" as="node()" select="."/>
										<terminateEventDefinition>
											<xsl:if test="$var39_terminateEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var39_terminateEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var39_terminateEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</terminateEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var25_endEvent/ns0:eventDefinitionRef">
										<xsl:variable name="var43_eventDefinitionRef" as="node()" select="."/>
										<eventDefinitionRef>
											<xsl:sequence select="xs:QName($var43_eventDefinitionRef)"/>
										</eventDefinitionRef>
									</xsl:for-each>
									<xsl:for-each select="$var25_endEvent/ns0:dataInput">
										<xsl:variable name="var45_dataInput" as="node()" select="."/>
										<dataInput>
											<xsl:if test="$var45_dataInput/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var45_dataInput/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var45_dataInput/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</dataInput>
									</xsl:for-each>
								</endEvent>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:eventBasedGateway">
								<xsl:variable name="var49_eventBasedGateway" as="node()" select="."/>
								<eventBasedGateway>
									<xsl:if test="$var49_eventBasedGateway/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var49_eventBasedGateway/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var49_eventBasedGateway/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var49_eventBasedGateway/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var49_eventBasedGateway/@eventGatewayType">
										<xsl:attribute name="eventGatewayType" namespace="">
											<xsl:sequence select="xs:string($var49_eventBasedGateway/@eventGatewayType)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var49_eventBasedGateway/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var49_eventBasedGateway/ns0:incoming">
										<xsl:variable name="var53_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var53_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var49_eventBasedGateway/ns0:outgoing">
										<xsl:variable name="var55_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var55_outgoing)"/>
										</outgoing>
									</xsl:for-each>
								</eventBasedGateway>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:exclusiveGateway">
								<xsl:variable name="var57_exclusiveGateway" as="node()" select="."/>
								<exclusiveGateway>
									<xsl:if test="$var57_exclusiveGateway/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var57_exclusiveGateway/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var57_exclusiveGateway/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var57_exclusiveGateway/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var57_exclusiveGateway/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var57_exclusiveGateway/ns0:incoming">
										<xsl:variable name="var61_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var61_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var57_exclusiveGateway/ns0:outgoing">
										<xsl:variable name="var63_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var63_outgoing)"/>
										</outgoing>
									</xsl:for-each>
								</exclusiveGateway>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:intermediateCatchEvent">
								<xsl:variable name="var65_intermediateCatchEvent" as="node()" select="."/>
								<intermediateCatchEvent>
									<xsl:if test="$var65_intermediateCatchEvent/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var65_intermediateCatchEvent/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var65_intermediateCatchEvent/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var65_intermediateCatchEvent/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:incoming">
										<xsl:variable name="var69_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var69_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:outgoing">
										<xsl:variable name="var71_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var71_outgoing)"/>
										</outgoing>
									</xsl:for-each>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:messageEventDefinition">
										<xsl:variable name="var73_messageEventDefinition" as="node()" select="."/>
										<messageEventDefinition>
											<xsl:if test="$var73_messageEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var73_messageEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var73_messageEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var73_messageEventDefinition/ns0:operationRef">
												<xsl:variable name="var77_operationRef" as="node()" select="."/>
												<operationRef>
													<xsl:sequence select="xs:QName($var77_operationRef)"/>
												</operationRef>
											</xsl:for-each>
										</messageEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:terminateEventDefinition">
										<xsl:variable name="var79_terminateEventDefinition" as="node()" select="."/>
										<terminateEventDefinition>
											<xsl:if test="$var79_terminateEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var79_terminateEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var79_terminateEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</terminateEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:eventDefinitionRef">
										<xsl:variable name="var83_eventDefinitionRef" as="node()" select="."/>
										<eventDefinitionRef>
											<xsl:sequence select="xs:QName($var83_eventDefinitionRef)"/>
										</eventDefinitionRef>
									</xsl:for-each>
									<xsl:for-each select="$var65_intermediateCatchEvent/ns0:dataOutput">
										<xsl:variable name="var85_dataOutput" as="node()" select="."/>
										<dataOutput>
											<xsl:if test="$var85_dataOutput/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var85_dataOutput/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var85_dataOutput/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</dataOutput>
									</xsl:for-each>
								</intermediateCatchEvent>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:intermediateThrowEvent">
								<xsl:variable name="var89_intermediateThrowEvent" as="node()" select="."/>
								<intermediateThrowEvent>
									<xsl:if test="$var89_intermediateThrowEvent/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var89_intermediateThrowEvent/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var89_intermediateThrowEvent/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var89_intermediateThrowEvent/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:incoming">
										<xsl:variable name="var93_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var93_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:outgoing">
										<xsl:variable name="var95_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var95_outgoing)"/>
										</outgoing>
									</xsl:for-each>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:messageEventDefinition">
										<xsl:variable name="var97_messageEventDefinition" as="node()" select="."/>
										<messageEventDefinition>
											<xsl:if test="$var97_messageEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var97_messageEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var97_messageEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var97_messageEventDefinition/ns0:operationRef">
												<xsl:variable name="var101_operationRef" as="node()" select="."/>
												<operationRef>
													<xsl:sequence select="xs:QName($var101_operationRef)"/>
												</operationRef>
											</xsl:for-each>
										</messageEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:terminateEventDefinition">
										<xsl:variable name="var103_terminateEventDefinition" as="node()" select="."/>
										<terminateEventDefinition>
											<xsl:if test="$var103_terminateEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var103_terminateEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var103_terminateEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</terminateEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:eventDefinitionRef">
										<xsl:variable name="var107_eventDefinitionRef" as="node()" select="."/>
										<eventDefinitionRef>
											<xsl:sequence select="xs:QName($var107_eventDefinitionRef)"/>
										</eventDefinitionRef>
									</xsl:for-each>
									<xsl:for-each select="$var89_intermediateThrowEvent/ns0:dataInput">
										<xsl:variable name="var109_dataInput" as="node()" select="."/>
										<dataInput>
											<xsl:if test="$var109_dataInput/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var109_dataInput/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var109_dataInput/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</dataInput>
									</xsl:for-each>
								</intermediateThrowEvent>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:parallelGateway">
								<xsl:variable name="var113_parallelGateway" as="node()" select="."/>
								<parallelGateway>
									<xsl:if test="$var113_parallelGateway/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var113_parallelGateway/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var113_parallelGateway/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var113_parallelGateway/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var113_parallelGateway/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var113_parallelGateway/ns0:incoming">
										<xsl:variable name="var117_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var117_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var113_parallelGateway/ns0:outgoing">
										<xsl:variable name="var119_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var119_outgoing)"/>
										</outgoing>
									</xsl:for-each>
								</parallelGateway>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:sequenceFlow">
								<xsl:variable name="var121_sequenceFlow" as="node()" select="."/>
								<sequenceFlow>
									<xsl:if test="$var121_sequenceFlow/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var121_sequenceFlow/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var121_sequenceFlow/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var121_sequenceFlow/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:attribute name="sourceRef" namespace="">
										<xsl:sequence select="xs:string($var121_sequenceFlow/@sourceRef)"/>
									</xsl:attribute>
									<xsl:attribute name="targetRef" namespace="">
										<xsl:sequence select="xs:string($var121_sequenceFlow/@targetRef)"/>
									</xsl:attribute>
									<xsl:for-each select="$var121_sequenceFlow/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
								</sequenceFlow>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:serviceTask">
								<xsl:variable name="var125_serviceTask" as="node()" select="."/>
								<serviceTask>
									<xsl:if test="$var125_serviceTask/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var125_serviceTask/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var125_serviceTask/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var125_serviceTask/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var125_serviceTask/@implementation">
										<xsl:attribute name="implementation" namespace="">
											<xsl:sequence select="xs:string($var125_serviceTask/@implementation)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var125_serviceTask/@operationRef">
										<xsl:attribute name="operationRef" namespace="">
											<xsl:sequence select="xs:QName($var125_serviceTask/@operationRef)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var125_serviceTask/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var125_serviceTask/ns0:incoming">
										<xsl:variable name="var129_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var129_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var125_serviceTask/ns0:outgoing">
										<xsl:variable name="var131_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var131_outgoing)"/>
										</outgoing>
									</xsl:for-each>
								</serviceTask>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:startEvent">
								<xsl:variable name="var133_startEvent" as="node()" select="."/>
								<startEvent>
									<xsl:if test="$var133_startEvent/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var133_startEvent/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var133_startEvent/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var133_startEvent/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var133_startEvent/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var133_startEvent/ns0:incoming">
										<xsl:variable name="var137_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var137_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var133_startEvent/ns0:outgoing">
										<xsl:variable name="var139_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var139_outgoing)"/>
										</outgoing>
									</xsl:for-each>
									<xsl:for-each select="$var133_startEvent/ns0:messageEventDefinition">
										<xsl:variable name="var141_messageEventDefinition" as="node()" select="."/>
										<messageEventDefinition>
											<xsl:if test="$var141_messageEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var141_messageEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var141_messageEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var141_messageEventDefinition/ns0:operationRef">
												<xsl:variable name="var145_operationRef" as="node()" select="."/>
												<operationRef>
													<xsl:sequence select="xs:QName($var145_operationRef)"/>
												</operationRef>
											</xsl:for-each>
										</messageEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var133_startEvent/ns0:terminateEventDefinition">
										<xsl:variable name="var147_terminateEventDefinition" as="node()" select="."/>
										<terminateEventDefinition>
											<xsl:if test="$var147_terminateEventDefinition/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var147_terminateEventDefinition/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var147_terminateEventDefinition/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</terminateEventDefinition>
									</xsl:for-each>
									<xsl:for-each select="$var133_startEvent/ns0:eventDefinitionRef">
										<xsl:variable name="var151_eventDefinitionRef" as="node()" select="."/>
										<eventDefinitionRef>
											<xsl:sequence select="xs:QName($var151_eventDefinitionRef)"/>
										</eventDefinitionRef>
									</xsl:for-each>
									<xsl:for-each select="$var133_startEvent/ns0:dataOutput">
										<xsl:variable name="var153_dataOutput" as="node()" select="."/>
										<dataOutput>
											<xsl:if test="$var153_dataOutput/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var153_dataOutput/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var153_dataOutput/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</dataOutput>
									</xsl:for-each>
								</startEvent>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:subProcess">
								<xsl:variable name="var157_subProcess" as="node()" select="."/>
								<subProcess>
									<xsl:if test="$var157_subProcess/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var157_subProcess/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var157_subProcess/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var157_subProcess/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var157_subProcess/@triggeredByEvent">
										<xsl:attribute name="triggeredByEvent" namespace="">
											<xsl:sequence select="xs:string(xs:boolean($var157_subProcess/@triggeredByEvent))"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var157_subProcess/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:incoming">
										<xsl:variable name="var161_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var161_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:outgoing">
										<xsl:variable name="var163_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var163_outgoing)"/>
										</outgoing>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:complexGateway">
										<xsl:variable name="var165_complexGateway" as="node()" select="."/>
										<complexGateway>
											<xsl:if test="$var165_complexGateway/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var165_complexGateway/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var165_complexGateway/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var165_complexGateway/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var165_complexGateway/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var165_complexGateway/ns0:incoming">
												<xsl:variable name="var169_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var169_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var165_complexGateway/ns0:outgoing">
												<xsl:variable name="var171_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var171_outgoing)"/>
												</outgoing>
											</xsl:for-each>
											<xsl:for-each select="$var165_complexGateway/ns0:activationCondition">
												<xsl:variable name="var173_activationCondition" as="node()" select="."/>
												<activationCondition>
													<xsl:sequence select="xs:string($var173_activationCondition)"/>
												</activationCondition>
											</xsl:for-each>
										</complexGateway>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:endEvent">
										<xsl:variable name="var175_endEvent" as="node()" select="."/>
										<endEvent>
											<xsl:if test="$var175_endEvent/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var175_endEvent/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var175_endEvent/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var175_endEvent/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var175_endEvent/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var175_endEvent/ns0:incoming">
												<xsl:variable name="var179_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var179_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var175_endEvent/ns0:outgoing">
												<xsl:variable name="var181_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var181_outgoing)"/>
												</outgoing>
											</xsl:for-each>
											<xsl:for-each select="$var175_endEvent/ns0:messageEventDefinition">
												<xsl:variable name="var183_messageEventDefinition" as="node()" select="."/>
												<messageEventDefinition>
													<xsl:if test="$var183_messageEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var183_messageEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var183_messageEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
													<xsl:for-each select="$var183_messageEventDefinition/ns0:operationRef">
														<xsl:variable name="var187_operationRef" as="node()" select="."/>
														<operationRef>
															<xsl:sequence select="xs:QName($var187_operationRef)"/>
														</operationRef>
													</xsl:for-each>
												</messageEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var175_endEvent/ns0:terminateEventDefinition">
												<xsl:variable name="var189_terminateEventDefinition" as="node()" select="."/>
												<terminateEventDefinition>
													<xsl:if test="$var189_terminateEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var189_terminateEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var189_terminateEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</terminateEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var175_endEvent/ns0:eventDefinitionRef">
												<xsl:variable name="var193_eventDefinitionRef" as="node()" select="."/>
												<eventDefinitionRef>
													<xsl:sequence select="xs:QName($var193_eventDefinitionRef)"/>
												</eventDefinitionRef>
											</xsl:for-each>
											<xsl:for-each select="$var175_endEvent/ns0:dataInput">
												<xsl:variable name="var195_dataInput" as="node()" select="."/>
												<dataInput>
													<xsl:if test="$var195_dataInput/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var195_dataInput/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var195_dataInput/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</dataInput>
											</xsl:for-each>
										</endEvent>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:eventBasedGateway">
										<xsl:variable name="var199_eventBasedGateway" as="node()" select="."/>
										<eventBasedGateway>
											<xsl:if test="$var199_eventBasedGateway/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var199_eventBasedGateway/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var199_eventBasedGateway/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var199_eventBasedGateway/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var199_eventBasedGateway/@eventGatewayType">
												<xsl:attribute name="eventGatewayType" namespace="">
													<xsl:sequence select="xs:string($var199_eventBasedGateway/@eventGatewayType)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var199_eventBasedGateway/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var199_eventBasedGateway/ns0:incoming">
												<xsl:variable name="var203_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var203_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var199_eventBasedGateway/ns0:outgoing">
												<xsl:variable name="var205_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var205_outgoing)"/>
												</outgoing>
											</xsl:for-each>
										</eventBasedGateway>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:exclusiveGateway">
										<xsl:variable name="var207_exclusiveGateway" as="node()" select="."/>
										<exclusiveGateway>
											<xsl:if test="$var207_exclusiveGateway/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var207_exclusiveGateway/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var207_exclusiveGateway/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var207_exclusiveGateway/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var207_exclusiveGateway/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var207_exclusiveGateway/ns0:incoming">
												<xsl:variable name="var211_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var211_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var207_exclusiveGateway/ns0:outgoing">
												<xsl:variable name="var213_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var213_outgoing)"/>
												</outgoing>
											</xsl:for-each>
										</exclusiveGateway>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:intermediateCatchEvent">
										<xsl:variable name="var215_intermediateCatchEvent" as="node()" select="."/>
										<intermediateCatchEvent>
											<xsl:if test="$var215_intermediateCatchEvent/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var215_intermediateCatchEvent/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var215_intermediateCatchEvent/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var215_intermediateCatchEvent/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:incoming">
												<xsl:variable name="var219_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var219_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:outgoing">
												<xsl:variable name="var221_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var221_outgoing)"/>
												</outgoing>
											</xsl:for-each>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:messageEventDefinition">
												<xsl:variable name="var223_messageEventDefinition" as="node()" select="."/>
												<messageEventDefinition>
													<xsl:if test="$var223_messageEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var223_messageEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var223_messageEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
													<xsl:for-each select="$var223_messageEventDefinition/ns0:operationRef">
														<xsl:variable name="var227_operationRef" as="node()" select="."/>
														<operationRef>
															<xsl:sequence select="xs:QName($var227_operationRef)"/>
														</operationRef>
													</xsl:for-each>
												</messageEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:terminateEventDefinition">
												<xsl:variable name="var229_terminateEventDefinition" as="node()" select="."/>
												<terminateEventDefinition>
													<xsl:if test="$var229_terminateEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var229_terminateEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var229_terminateEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</terminateEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:eventDefinitionRef">
												<xsl:variable name="var233_eventDefinitionRef" as="node()" select="."/>
												<eventDefinitionRef>
													<xsl:sequence select="xs:QName($var233_eventDefinitionRef)"/>
												</eventDefinitionRef>
											</xsl:for-each>
											<xsl:for-each select="$var215_intermediateCatchEvent/ns0:dataOutput">
												<xsl:variable name="var235_dataOutput" as="node()" select="."/>
												<dataOutput>
													<xsl:if test="$var235_dataOutput/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var235_dataOutput/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var235_dataOutput/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</dataOutput>
											</xsl:for-each>
										</intermediateCatchEvent>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:intermediateThrowEvent">
										<xsl:variable name="var239_intermediateThrowEvent" as="node()" select="."/>
										<intermediateThrowEvent>
											<xsl:if test="$var239_intermediateThrowEvent/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var239_intermediateThrowEvent/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var239_intermediateThrowEvent/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var239_intermediateThrowEvent/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:incoming">
												<xsl:variable name="var243_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var243_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:outgoing">
												<xsl:variable name="var245_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var245_outgoing)"/>
												</outgoing>
											</xsl:for-each>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:messageEventDefinition">
												<xsl:variable name="var247_messageEventDefinition" as="node()" select="."/>
												<messageEventDefinition>
													<xsl:if test="$var247_messageEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var247_messageEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var247_messageEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
													<xsl:for-each select="$var247_messageEventDefinition/ns0:operationRef">
														<xsl:variable name="var251_operationRef" as="node()" select="."/>
														<operationRef>
															<xsl:sequence select="xs:QName($var251_operationRef)"/>
														</operationRef>
													</xsl:for-each>
												</messageEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:terminateEventDefinition">
												<xsl:variable name="var253_terminateEventDefinition" as="node()" select="."/>
												<terminateEventDefinition>
													<xsl:if test="$var253_terminateEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var253_terminateEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var253_terminateEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</terminateEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:eventDefinitionRef">
												<xsl:variable name="var257_eventDefinitionRef" as="node()" select="."/>
												<eventDefinitionRef>
													<xsl:sequence select="xs:QName($var257_eventDefinitionRef)"/>
												</eventDefinitionRef>
											</xsl:for-each>
											<xsl:for-each select="$var239_intermediateThrowEvent/ns0:dataInput">
												<xsl:variable name="var259_dataInput" as="node()" select="."/>
												<dataInput>
													<xsl:if test="$var259_dataInput/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var259_dataInput/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var259_dataInput/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</dataInput>
											</xsl:for-each>
										</intermediateThrowEvent>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:parallelGateway">
										<xsl:variable name="var263_parallelGateway" as="node()" select="."/>
										<parallelGateway>
											<xsl:if test="$var263_parallelGateway/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var263_parallelGateway/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var263_parallelGateway/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var263_parallelGateway/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var263_parallelGateway/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var263_parallelGateway/ns0:incoming">
												<xsl:variable name="var267_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var267_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var263_parallelGateway/ns0:outgoing">
												<xsl:variable name="var269_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var269_outgoing)"/>
												</outgoing>
											</xsl:for-each>
										</parallelGateway>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:sequenceFlow">
										<xsl:variable name="var271_sequenceFlow" as="node()" select="."/>
										<sequenceFlow>
											<xsl:if test="$var271_sequenceFlow/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var271_sequenceFlow/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var271_sequenceFlow/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var271_sequenceFlow/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:attribute name="sourceRef" namespace="">
												<xsl:sequence select="xs:string($var271_sequenceFlow/@sourceRef)"/>
											</xsl:attribute>
											<xsl:attribute name="targetRef" namespace="">
												<xsl:sequence select="xs:string($var271_sequenceFlow/@targetRef)"/>
											</xsl:attribute>
											<xsl:for-each select="$var271_sequenceFlow/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
										</sequenceFlow>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:serviceTask">
										<xsl:variable name="var275_serviceTask" as="node()" select="."/>
										<serviceTask>
											<xsl:if test="$var275_serviceTask/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var275_serviceTask/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var275_serviceTask/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var275_serviceTask/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var275_serviceTask/@implementation">
												<xsl:attribute name="implementation" namespace="">
													<xsl:sequence select="xs:string($var275_serviceTask/@implementation)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var275_serviceTask/@operationRef">
												<xsl:attribute name="operationRef" namespace="">
													<xsl:sequence select="xs:QName($var275_serviceTask/@operationRef)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var275_serviceTask/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var275_serviceTask/ns0:incoming">
												<xsl:variable name="var279_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var279_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var275_serviceTask/ns0:outgoing">
												<xsl:variable name="var281_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var281_outgoing)"/>
												</outgoing>
											</xsl:for-each>
										</serviceTask>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:startEvent">
										<xsl:variable name="var283_startEvent" as="node()" select="."/>
										<startEvent>
											<xsl:if test="$var283_startEvent/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var283_startEvent/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var283_startEvent/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var283_startEvent/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var283_startEvent/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var283_startEvent/ns0:incoming">
												<xsl:variable name="var287_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var287_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var283_startEvent/ns0:outgoing">
												<xsl:variable name="var289_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var289_outgoing)"/>
												</outgoing>
											</xsl:for-each>
											<xsl:for-each select="$var283_startEvent/ns0:messageEventDefinition">
												<xsl:variable name="var291_messageEventDefinition" as="node()" select="."/>
												<messageEventDefinition>
													<xsl:if test="$var291_messageEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var291_messageEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var291_messageEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
													<xsl:for-each select="$var291_messageEventDefinition/ns0:operationRef">
														<xsl:variable name="var295_operationRef" as="node()" select="."/>
														<operationRef>
															<xsl:sequence select="xs:QName($var295_operationRef)"/>
														</operationRef>
													</xsl:for-each>
												</messageEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var283_startEvent/ns0:terminateEventDefinition">
												<xsl:variable name="var297_terminateEventDefinition" as="node()" select="."/>
												<terminateEventDefinition>
													<xsl:if test="$var297_terminateEventDefinition/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var297_terminateEventDefinition/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var297_terminateEventDefinition/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</terminateEventDefinition>
											</xsl:for-each>
											<xsl:for-each select="$var283_startEvent/ns0:eventDefinitionRef">
												<xsl:variable name="var301_eventDefinitionRef" as="node()" select="."/>
												<eventDefinitionRef>
													<xsl:sequence select="xs:QName($var301_eventDefinitionRef)"/>
												</eventDefinitionRef>
											</xsl:for-each>
											<xsl:for-each select="$var283_startEvent/ns0:dataOutput">
												<xsl:variable name="var303_dataOutput" as="node()" select="."/>
												<dataOutput>
													<xsl:if test="$var303_dataOutput/@id">
														<xsl:attribute name="id" namespace="">
															<xsl:sequence select="xs:string($var303_dataOutput/@id)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="$var303_dataOutput/ns0:extensionElements">
														<extensionElements/>
													</xsl:for-each>
												</dataOutput>
											</xsl:for-each>
										</startEvent>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:subProcess">
										<subProcess/>
									</xsl:for-each>
									<xsl:for-each select="$var157_subProcess/ns0:task">
										<xsl:variable name="var309_task" as="node()" select="."/>
										<task>
											<xsl:if test="$var309_task/@id">
												<xsl:attribute name="id" namespace="">
													<xsl:sequence select="xs:string($var309_task/@id)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var309_task/@name">
												<xsl:attribute name="name" namespace="">
													<xsl:sequence select="xs:string($var309_task/@name)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:for-each select="$var309_task/ns0:extensionElements">
												<extensionElements/>
											</xsl:for-each>
											<xsl:for-each select="$var309_task/ns0:incoming">
												<xsl:variable name="var313_incoming" as="node()" select="."/>
												<incoming>
													<xsl:sequence select="xs:QName($var313_incoming)"/>
												</incoming>
											</xsl:for-each>
											<xsl:for-each select="$var309_task/ns0:outgoing">
												<xsl:variable name="var315_outgoing" as="node()" select="."/>
												<outgoing>
													<xsl:sequence select="xs:QName($var315_outgoing)"/>
												</outgoing>
											</xsl:for-each>
										</task>
									</xsl:for-each>
								</subProcess>
							</xsl:for-each>
							<xsl:for-each select="$var11_process/ns0:task">
								<xsl:variable name="var317_task" as="node()" select="."/>
								<task>
									<xsl:if test="$var317_task/@id">
										<xsl:attribute name="id" namespace="">
											<xsl:sequence select="xs:string($var317_task/@id)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var317_task/@name">
										<xsl:attribute name="name" namespace="">
											<xsl:sequence select="xs:string($var317_task/@name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="$var317_task/ns0:extensionElements">
										<extensionElements/>
									</xsl:for-each>
									<xsl:for-each select="$var317_task/ns0:incoming">
										<xsl:variable name="var321_incoming" as="node()" select="."/>
										<incoming>
											<xsl:sequence select="xs:QName($var321_incoming)"/>
										</incoming>
									</xsl:for-each>
									<xsl:for-each select="$var317_task/ns0:outgoing">
										<xsl:variable name="var323_outgoing" as="node()" select="."/>
										<outgoing>
											<xsl:sequence select="xs:QName($var323_outgoing)"/>
										</outgoing>
									</xsl:for-each>
								</task>
							</xsl:for-each>
						</process>
					</xsl:for-each>
					<xsl:for-each select="$var3_definitions/ns0:terminateEventDefinition">
						<xsl:variable name="var325_terminateEventDefinition" as="node()" select="."/>
						<terminateEventDefinition>
							<xsl:if test="$var325_terminateEventDefinition/@id">
								<xsl:attribute name="id" namespace="">
									<xsl:sequence select="xs:string($var325_terminateEventDefinition/@id)"/>
								</xsl:attribute>
							</xsl:if>
							<xsl:for-each select="$var325_terminateEventDefinition/ns0:extensionElements">
								<extensionElements/>
							</xsl:for-each>
						</terminateEventDefinition>
					</xsl:for-each>
				</xsl:for-each>
			</definitions>
		</xsl:variable>
		<xsl:variable name="var329_result_converturitowindowsfilepath" as="xs:string">
			<xsl:call-template name="core:convert-uri-to-windows-file-path">
				<xsl:with-param name="uri" select="fn:document-uri($var1_instance_BPMN20withoutDiagramms)" as="xs:string"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:result-document href="{$var329_result_converturitowindowsfilepath}" encoding="UTF-8">
			<xsl:sequence select="$var2_create_definitions"/>
		</xsl:result-document>
	</xsl:template>
</xsl:stylesheet>