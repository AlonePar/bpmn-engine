<?xml version="1.0" encoding="UTF-8"?>
<!--

    *******************************************************
    Copyright (C) 2013 catify <info@catify.com>
    *******************************************************

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:akka="http://repo.akka.io/schema/akka"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/data/neo4j http://www.springframework.org/schema/data/neo4j/spring-neo4j-2.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://repo.akka.io/schema/akka http://repo.akka.io/akka.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<context:component-scan base-package="com.catify.processengine" />

	<context:spring-configured />
	<context:annotation-config />

	<!-- neo4j db -->
	<import resource="neo4j-context.xml"/>

	<tx:annotation-driven mode="aspectj" />

	<!-- bean for the (xslt) transformation component -->
	<bean id="xalanTransformerFactory" class="org.apache.xalan.xsltc.trax.TransformerFactoryImpl" />

	<!-- init the actor system that is responsible for all actors -->
	<bean id="actorSystem" class="akka.actor.ActorSystem"
		factory-method="create" scope="singleton">
		<constructor-arg type="java.lang.String" value="ProcessEngine" />
	</bean>

	<!-- init core actors -->
	<bean id="coreActors" class="com.catify.processengine.core.CoreActors" depends-on="actorSystem">
		<constructor-arg name="actorSystem" ref="actorSystem" />
		<constructor-arg type="java.lang.String" value="metaDataWriter" />
		<constructor-arg type="int" value="1" />
		<constructor-arg type="java.lang.String" value="processInstanceCleansingActor" />
	</bean>

	<!-- external settings -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
       			<value>value="file:config/datastore.properties"</value> 
      		</list>
      	</property>
      	<property name="properties">
			<props>
				<prop key="datastore.implementation">voldemort</prop>
			</props>
		</property>
	</bean>

<!-- 	<bean id="dataObjectService" -->
<!-- 		class="com.catify.processengine.core.data.dataobjects.DataObjectService"> -->
<!-- 		<property name="dataObjectServiceProviderIdSetting" value="${datastore.implementation}" /> -->
<!-- 	</bean> -->
</beans>
